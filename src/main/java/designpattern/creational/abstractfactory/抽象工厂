抽象工厂：
定义：抽象工厂模式提供一个创建一系列相关或相互依赖对象的接口，无序指定他们具体
     的类，将实现细节和使用分开
类型：创建型
适用场景：应用层不依赖与产品类实例如何被创建、实现等细节。强调一系列相关的产品
         对象（属于同一产品族）一起使用创建对象需要大量重复的代码。提供一个产
         品类的库，所有产品以相同接口出现从而使应用层不依赖具体实现。
优点：具体产品在应用层代码隔离，无序关心创建细节。将一系列产品族统一到一起创建。
缺点：规定了所有可能被创建的产品集合，产品族中扩展新的产品困难，需要修改抽象工
     厂的接口。增加了系统抽象性和理解难度。

抽象工厂偏重于创建产品族，在此例中课程就是一个大的产品族，这个产品族中包含视频
笔记两种产品等级结构，不过抽象工厂模式中一旦需要添加产品等级结构需要修改大量接
口的代码。

产品族：类似华为、小米、联想这些品牌，每一个品牌都包含手机，笔记本电脑，PC
产品等级结构：不同品牌的手机构成同一产品等级结构，华为、小米、联想的手机称为一
             个产品等级结构。

源码应用：
java.sql.connection：数据库连接的接口，通过connection这个接口获取的statement
                     对象都属于同一产品族（Mysql、Oracle、Sql Server），同一
                     产品族包含不同产品等级结构。
sqlsessionfactory：mybatis，返回不同的sqlsession（Mysql、Oracle、Sql Server）

